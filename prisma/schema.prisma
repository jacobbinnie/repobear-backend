generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String       @id @default(uuid())
  email        String       @unique
  avatar       String?
  createdAt    DateTime     @default(now())
  deletedAt    DateTime?
  updatedAt    DateTime     @default(now()) @updatedAt
  password     String
  buckets      Bucket[]
  repositories Repository[]
}

model Repository {
  id         String      @id @default(uuid())
  name       String
  price      Float
  clonable   Boolean     @default(false)
  ownerId    String
  createdAt  DateTime    @default(now())
  updatedAt  DateTime    @updatedAt
  bucketId   String?
  deletedAt  DateTime?
  buckets    Bucket?     @relation(fields: [bucketId], references: [id])
  owner      User        @relation(fields: [ownerId], references: [id])
  shareLinks ShareLink[]
}

model Bucket {
  id           String       @id @default(uuid())
  name         String
  price        Float
  clonable     Boolean      @default(false)
  ownerId      String
  createdAt    DateTime     @default(now())
  updatedAt    DateTime     @updatedAt
  deletedAt    DateTime?
  owner        User         @relation(fields: [ownerId], references: [id])
  repositories Repository[]
}

model ShareLink {
  id           String     @id @default(uuid())
  link         String
  expiry       DateTime?
  repositoryId String
  createdAt    DateTime   @default(now())
  updatedAt    DateTime   @updatedAt
  deletedAt    DateTime?
  repository   Repository @relation(fields: [repositoryId], references: [id])
}
