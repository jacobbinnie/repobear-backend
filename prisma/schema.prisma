// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String       @id @default(uuid())
  email        String       @unique
  username     String
  name         String
  avatar       String?
  repositories Repository[]
  buckets      Bucket[]
  createdAt    DateTime     @default(now())
  updatedAt    DateTime     @default(now()) @updatedAt
  deletedAt    DateTime?
}

model Repository {
  id         String      @id @default(uuid())
  name       String
  price      Float
  clonable   Boolean     @default(false)
  owner      User        @relation(fields: [ownerId], references: [id])
  ownerId    String
  buckets    Bucket?     @relation(fields: [bucketId], references: [id])
  bucketId   String?
  shareLinks ShareLink[]
  createdAt  DateTime    @default(now())
  updatedAt  DateTime    @updatedAt
  deletedAt  DateTime?
}

model Bucket {
  id           String       @id @default(uuid())
  name         String
  price        Float
  clonable     Boolean      @default(false)
  owner        User         @relation(fields: [ownerId], references: [id])
  ownerId      String
  repositories Repository[]
  createdAt    DateTime     @default(now())
  updatedAt    DateTime     @updatedAt
  deletedAt    DateTime?
}

model ShareLink {
  id           String     @id @default(uuid())
  link         String
  expiry       DateTime?
  repository   Repository @relation(fields: [repositoryId], references: [id])
  repositoryId String
  createdAt    DateTime   @default(now())
  updatedAt    DateTime   @updatedAt
  deletedAt    DateTime?
}
